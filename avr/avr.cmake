 
SET(CMAKE_SYSTEM_NAME Generic)
SET(AVR_TOOLCHAIN_DIR "/usr/lib/avr")
SET(AVR_TOOLCHAIN_INCLUDE_DIR "${AVR_TOOLCHAIN_DIR}/include")

GET_FILENAME_COMPONENT(AVR_PROJECTS_ROOT "${CMAKE_CURRENT_LIST_FILE}" PATH)
GET_FILENAME_COMPONENT(AVR_HEXOUT_ROOT "${CMAKE_CURRENT_LIST_FILE}" PATH)
GET_FILENAME_COMPONENT(AVR_HEXOUT_ROOT "${CMAKE_BINARY_DIR}" ABSOLUTE)

SET(CMAKE_C_COMPILER "avr-gcc")
SET(CMAKE_CXX_COMPILER "avr-g++")

SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)

IF (AVR_TYPE STREQUAL "atmega8")
	add_definitions(-D__AVR_ATmega8__)
ENDIF()
IF (AVR_TYPE STREQUAL "atmega16a")
	add_definitions(-D__AVR_ATmega16__)
ENDIF()

MESSAGE(STATUS "AVR type [-DAVR_TYPE=...]: ${AVR_TYPE}")

IF(NOT F_CPU)
	SET(F_CPU "8000000L")
ENDIF()
MESSAGE(STATUS "CPU [-DF_CPU=...]: ${F_CPU}")

IF(NOT TTY)
	SET(TTY "/dev/ttyUSB0")
ENDIF()
MESSAGE(STATUS "FW upload tty [-DTTY=...]: ${TTY}")

SET(COPT "-Os -DF_CPU=${F_CPU}")
#SET(COPT "-g")
SET(CSTANDARD "-std=c99")
SET(CDEBUG "-gstabs")
SET(CWARN "-Wall -Wstrict-prototypes")
SET(CTUNING "-fdata-sections -ffunction-sections -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums")
SET(CMCU "-mmcu=${AVR_TYPE}")
SET(CLINK "-Wl,--gc-sections")

SET(CFLAGS "${CMCU} ${CDEBUG} ${CDEFS} ${CINCS} ${COPT} ${CWARN} ${CSTANDARD} ${CEXTRA}")
SET(CXXFLAGS "${CMCU} ${CDEFS} ${CINCS} ${COPT}")
SET(LINKFLAGS "${CLINK}")
SET(CMAKE_C_FLAGS  ${CFLAGS})
SET(CMAKE_CXX_FLAGS ${CXXFLAGS})
SET(CMAKE_EXE_LINKER_FLAGS ${LINKFLAGS})

# create avr hex
add_custom_command(
	COMMAND avr-objcopy -O ihex -R.eeprom ${CMAKE_PROJECT_NAME} ${AVR_HEXOUT_ROOT}/${CMAKE_PROJECT_NAME}.hex
	OUTPUT ${AVR_HEXOUT_ROOT}/${CMAKE_PROJECT_NAME}.hex
	DEPENDS ${CMAKE_PROJECT_NAME}
)

ADD_CUSTOM_TARGET(hex ALL
	DEPENDS ${CMAKE_PROJECT_NAME} ${AVR_HEXOUT_ROOT}/${CMAKE_PROJECT_NAME}.hex)

ADD_CUSTOM_TARGET(fw
	COMMAND avrdude -p m16 -c avr109 -P ${TTY} -U "flash:w:${AVR_HEXOUT_ROOT}/${CMAKE_PROJECT_NAME}.hex"
	DEPENDS ${CMAKE_PROJECT_NAME} ${AVR_HEXOUT_ROOT}/${CMAKE_PROJECT_NAME}.hex)

INCLUDE_DIRECTORIES(${AVR_TOOLCHAIN_INCLUDE_DIR})
